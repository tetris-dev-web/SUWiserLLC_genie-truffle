{
  "contractName": "AmendmentMock",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "closeFunctionality",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "coAmendment",
          "type": "address"
        }
      ],
      "name": "addCoAmendment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_amendmentById",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stopAddingCoAmendments",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "amendmentId",
          "type": "uint256"
        }
      ],
      "name": "amendmentById",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "depricated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finishedAddingCoAmendments",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCoAmendments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "coAmendmentToUpdateId",
          "type": "uint256"
        },
        {
          "name": "newReferenceAmendment",
          "type": "address"
        }
      ],
      "name": "modifyAmendment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "replacable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_replacable",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "b",
          "type": "bool"
        }
      ],
      "name": "setFinishedAddingCoAmendments",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "resetAmendmentById",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610bdf8339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460016101000a81548160ff0219169083151502179055505050610b408061009f6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063287599e3146100eb5780633f0a4ccc1461010257806348290c57146101455780636d2a337d14610172578063715018a6146101df5780637349197f146101f65780638770c7f1146102255780638da5cb5b1461023c57806391402ecf14610293578063a3b67c9414610300578063abcde5481461032f578063b2bdfa7b1461035e578063c3a502b0146103b5578063e7041574146103e0578063f2fde38b1461042d578063fb69d7ab14610470575b600080fd5b3480156100f757600080fd5b5061010061049f565b005b34801561010e57600080fd5b50610143600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610532565b005b34801561015157600080fd5b506101706004803603810190808035906020019092919050505061060c565b005b34801561017e57600080fd5b5061019d60048036038101908080359060200190929190505050610662565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101eb57600080fd5b506101f4610695565b005b34801561020257600080fd5b50610223600480360381019080803515159060200190929190505050610797565b005b34801561023157600080fd5b5061023a6107b4565b005b34801561024857600080fd5b5061025161082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029f57600080fd5b506102be60048036038101908080359060200190929190505050610851565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030c57600080fd5b5061031561088e565b604051808215151515815260200191505060405180910390f35b34801561033b57600080fd5b506103446108a5565b604051808215151515815260200191505060405180910390f35b34801561036a57600080fd5b506103736108b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103c157600080fd5b506103ca6108e1565b6040518082815260200191505060405180910390f35b3480156103ec57600080fd5b5061042b60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e7565b005b34801561043957600080fd5b5061046e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610998565b005b34801561047c57600080fd5b50610485610a07565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fa57600080fd5b600460019054906101000a900460ff16151561051557600080fd5b6001600460006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058d57600080fd5b600460029054906101000a900460ff161515156105a957600080fd5b6001600254016002819055508060036000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b80600460026101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080f57600080fd5b6001600460026101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460009054906101000a900460ff16905090565b600460029054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561094257600080fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109f357600080fd5b6005600181905550610a0481610a1a565b50565b600460019054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a5657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058204d17bbda77189d300fd07d7ad31516e4f58cdd24774f0a9cce9c89314f77a5060029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063287599e3146100eb5780633f0a4ccc1461010257806348290c57146101455780636d2a337d14610172578063715018a6146101df5780637349197f146101f65780638770c7f1146102255780638da5cb5b1461023c57806391402ecf14610293578063a3b67c9414610300578063abcde5481461032f578063b2bdfa7b1461035e578063c3a502b0146103b5578063e7041574146103e0578063f2fde38b1461042d578063fb69d7ab14610470575b600080fd5b3480156100f757600080fd5b5061010061049f565b005b34801561010e57600080fd5b50610143600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610532565b005b34801561015157600080fd5b506101706004803603810190808035906020019092919050505061060c565b005b34801561017e57600080fd5b5061019d60048036038101908080359060200190929190505050610662565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101eb57600080fd5b506101f4610695565b005b34801561020257600080fd5b50610223600480360381019080803515159060200190929190505050610797565b005b34801561023157600080fd5b5061023a6107b4565b005b34801561024857600080fd5b5061025161082c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029f57600080fd5b506102be60048036038101908080359060200190929190505050610851565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030c57600080fd5b5061031561088e565b604051808215151515815260200191505060405180910390f35b34801561033b57600080fd5b506103446108a5565b604051808215151515815260200191505060405180910390f35b34801561036a57600080fd5b506103736108b8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103c157600080fd5b506103ca6108e1565b6040518082815260200191505060405180910390f35b3480156103ec57600080fd5b5061042b60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e7565b005b34801561043957600080fd5b5061046e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610998565b005b34801561047c57600080fd5b50610485610a07565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fa57600080fd5b600460019054906101000a900460ff16151561051557600080fd5b6001600460006101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561058d57600080fd5b600460029054906101000a900460ff161515156105a957600080fd5b6001600254016002819055508060036000600254815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106f057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b80600460026101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561080f57600080fd5b6001600460026101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600460009054906101000a900460ff16905090565b600460029054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561094257600080fd5b806003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109f357600080fd5b6005600181905550610a0481610a1a565b50565b600460019054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a5657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058204d17bbda77189d300fd07d7ad31516e4f58cdd24774f0a9cce9c89314f77a5060029",
  "sourceMap": "60:299:2:-;;;100:65;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;150:11;583:10:33;575:5;;:18;;;;;;;;;;;;;;;;;;500:11:0;487:10;;:24;;;;;;;;;;;;;;;;;;429:89;100:65:2;60:299;;;;;;",
  "deployedSourceMap": "60:299:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:100:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1267:100:0;;;;;;656:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;656:220:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;269:88:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:88:2;;;;;;;;;;;;;;;;;;;;;;;;;;136:49:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;136:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:111:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1084:111:33;;;;;;169:96:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;169:96:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:102:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;882:102:0;;;;;;246:20:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:20:33;;;;;;;;;;;;;;;;;;;;;;;;;;;524:126:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;524:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1178:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1178:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;245:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;245:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;749:72:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;749:72:33;;;;;;;;;;;;;;;;;;;;;;;;;;;100:32:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;100:32:0;;;;;;;;;;;;;;;;;;;;;;;990:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1375:118:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1375:118:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;219:22:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;219:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:100;727:5:33;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;;;402:10:0;;;;;;;;;;;394:19;;;;;;;;1356:4;1342:11;;:18;;;;;;;;;;;;;;;;;;1267:100::o;656:220::-;727:5:33;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;;;738:26:0;;;;;;;;;;;737:27;729:36;;;;;;;;813:1;793:17;;:21;773:17;:41;;;;858:11;822:14;:33;837:17;;822:33;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;656:220;:::o;269:88:2:-;350:1;322:14;:17;337:1;322:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;269:88;:::o;136:49:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;1084:111:33:-;727:5;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;;;1160:5;;;;;;;;;;;1141:25;;;;;;;;;;;;1188:1;1172:5;;:18;;;;;;;;;;;;;;;;;;1084:111::o;169:96:2:-;259:1;230:26;;:30;;;;;;;;;;;;;;;;;;169:96;:::o;882:102:0:-;727:5:33;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;;;973:4:0;944:26;;:33;;;;;;;;;;;;;;;;;;882:102::o;246:20:33:-;;;;;;;;;;;;;:::o;524:126:0:-;592:7;616:14;:27;631:11;616:27;;;;;;;;;;;;;;;;;;;;;609:34;;524:126;;;:::o;1178:83::-;1222:4;1243:11;;;;;;;;;;;1236:18;;1178:83;:::o;245:38::-;;;;;;;;;;;;;:::o;749:72:33:-;789:7;811:5;;;;;;;;;;;804:12;;749:72;:::o;100:32:0:-;;;;:::o;990:182::-;727:5:33;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;;;1144:21:0;1104:14;:37;1119:21;1104:37;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;990:182;;:::o;1375:118:33:-;727:5;;;;;;;;;;;713:19;;:10;:19;;;705:28;;;;;;;;1452:1;1444:5;:9;;;;1459:29;1478:9;1459:18;:29::i;:::-;1375:118;:::o;219:22:0:-;;;;;;;;;;;;;:::o;1628:171:33:-;1719:1;1698:23;;:9;:23;;;;1690:32;;;;;;;;1761:9;1733:38;;1754:5;;;;;;;;;;;1733:38;;;;;;;;;;;;1785:9;1777:5;;:17;;;;;;;;;;;;;;;;;;1628:171;:::o",
  "source": "pragma solidity >=0.4.22 <0.6.0;\nimport './Amendment.sol';\n\ncontract AmendmentMock is Amendment {\n  constructor (bool _replacable) public\n  Amendment(_replacable) {}\n\n  function setFinishedAddingCoAmendments (bool b) public {\n    finishedAddingCoAmendments = b;\n  }\n\n  function resetAmendmentById (uint256 n) public {\n    _amendmentById[n] = address(0);\n  }\n}\n",
  "sourcePath": "D:\\Projects\\SUWiserLLC\\serge\\contracts\\AmendmentMock.sol",
  "ast": {
    "absolutePath": "/D/Projects/SUWiserLLC/serge/contracts/AmendmentMock.sol",
    "exportedSymbols": {
      "AmendmentMock": [
        260
      ]
    },
    "id": 261,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 223,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/D/Projects/SUWiserLLC/serge/contracts/Amendment.sol",
        "file": "./Amendment.sol",
        "id": 224,
        "nodeType": "ImportDirective",
        "scope": 261,
        "sourceUnit": 128,
        "src": "33:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 225,
              "name": "Amendment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 127,
              "src": "86:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Amendment_$127",
                "typeString": "contract Amendment"
              }
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "86:9:2"
          }
        ],
        "contractDependencies": [
          127,
          6310
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 260,
        "linearizedBaseContracts": [
          260,
          127,
          6310
        ],
        "name": "AmendmentMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "163:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 235,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 231,
                    "name": "_replacable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "150:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 232,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 230,
                  "name": "Amendment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 127,
                  "src": "140:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Amendment_$127_$",
                    "typeString": "type(contract Amendment)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "140:22:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "_replacable",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "113:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "112:18:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:0:2"
            },
            "scope": 260,
            "src": "100:65:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "224:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 240,
                      "name": "finishedAddingCoAmendments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "230:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 241,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "259:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "230:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "230:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 245,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setFinishedAddingCoAmendments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "209:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "208:8:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:0:2"
            },
            "scope": 260,
            "src": "169:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "316:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_amendmentById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "322:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 252,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "337:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "322:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "350:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "342:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "342:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "322:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "322:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 259,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "resetAmendmentById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "298:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "297:11:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:2"
            },
            "scope": 260,
            "src": "269:88:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 261,
        "src": "60:299:2"
      }
    ],
    "src": "0:360:2"
  },
  "legacyAST": {
    "absolutePath": "/D/Projects/SUWiserLLC/serge/contracts/AmendmentMock.sol",
    "exportedSymbols": {
      "AmendmentMock": [
        260
      ]
    },
    "id": 261,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 223,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/D/Projects/SUWiserLLC/serge/contracts/Amendment.sol",
        "file": "./Amendment.sol",
        "id": 224,
        "nodeType": "ImportDirective",
        "scope": 261,
        "sourceUnit": 128,
        "src": "33:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 225,
              "name": "Amendment",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 127,
              "src": "86:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Amendment_$127",
                "typeString": "contract Amendment"
              }
            },
            "id": 226,
            "nodeType": "InheritanceSpecifier",
            "src": "86:9:2"
          }
        ],
        "contractDependencies": [
          127,
          6310
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 260,
        "linearizedBaseContracts": [
          260,
          127,
          6310
        ],
        "name": "AmendmentMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 234,
              "nodeType": "Block",
              "src": "163:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 235,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 231,
                    "name": "_replacable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 228,
                    "src": "150:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 232,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 230,
                  "name": "Amendment",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 127,
                  "src": "140:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Amendment_$127_$",
                    "typeString": "type(contract Amendment)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "140:22:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "_replacable",
                  "nodeType": "VariableDeclaration",
                  "scope": 235,
                  "src": "113:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "112:18:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "163:0:2"
            },
            "scope": 260,
            "src": "100:65:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 244,
              "nodeType": "Block",
              "src": "224:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 240,
                      "name": "finishedAddingCoAmendments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "230:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 241,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "259:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "230:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "230:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 245,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setFinishedAddingCoAmendments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 245,
                  "src": "209:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "209:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "208:8:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:0:2"
            },
            "scope": 260,
            "src": "169:96:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "316:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "_amendmentById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "322:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 252,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 247,
                        "src": "337:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "322:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "350:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "342:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "342:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "322:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "322:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 259,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "resetAmendmentById",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "298:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "297:11:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:2"
            },
            "scope": 260,
            "src": "269:88:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 261,
        "src": "60:299:2"
      }
    ],
    "src": "0:360:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2022-02-19T17:44:11.868Z"
}