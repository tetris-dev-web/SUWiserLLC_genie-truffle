{
  "contractName": "AmendmentPollStub",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalInFavor",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentPollId",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "addMethod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "callHistory",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalsPassed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAgainstWeighted",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "inFavor",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalInFavorWeighted",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalsFailed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalAgainst",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "resetMethod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "open",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "b",
          "type": "bool"
        }
      ],
      "name": "setProposalsPassed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "b",
          "type": "bool"
        }
      ],
      "name": "setProposalsFailed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openPoll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526c7e37be2022c0914b268000000060095534801561002157600080fd5b50604051602080611b7c8339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050611aa5806100d76000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b7bff231461010c578063255b5a211461013b5780634017605814610166578063480aa6541461017d57806351542e3a146101a8578063547d8020146102115780636c2626a51461048f5780636ecb7244146104be578063715018a6146104e95780637ace48e7146105005780638da5cb5b1461052f57806392d4707814610586578063b2bdfa7b146105b1578063cb84b7d014610608578063d6407b8714610637578063de15e28814610666578063f2fde38b14610691578063f427b135146106d4578063fcfff16f1461073d575b600080fd5b34801561011857600080fd5b5061013960048036038101908080351515906020019092919050505061076c565b005b34801561014757600080fd5b50610150610789565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b61078f565b005b34801561018957600080fd5b50610192610817565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b5061020f600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061081d565b005b34801561021d57600080fd5b50610278600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610a25565b604051808c81526020018b81526020018a81526020018060200180602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001861515151581526020018515151515815260200184810384528c818151815260200191508051906020019080838360005b8381101561037c578082015181840152602081019050610361565b50505050905090810190601f1680156103a95780820380516001836020036101000a031916815260200191505b5084810383528b818151815260200191508051906020019080838360005b838110156103e25780820151818401526020810190506103c7565b50505050905090810190601f16801561040f5780820380516001836020036101000a031916815260200191505b5084810382528a818151815260200191508051906020019080838360005b8381101561044857808201518184015260208101905061042d565b50505050905090810190601f1680156104755780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b34801561049b57600080fd5b506104a4610e5e565b604051808215151515815260200191505060405180910390f35b3480156104ca57600080fd5b506104d3610e71565b6040518082815260200191505060405180910390f35b3480156104f557600080fd5b506104fe610e77565b005b34801561050c57600080fd5b5061052d600480360381019080803515159060200190929190505050610f79565b005b34801561053b57600080fd5b506105446111f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059257600080fd5b5061059b611215565b6040518082815260200191505060405180910390f35b3480156105bd57600080fd5b506105c661121b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061457600080fd5b5061061d611244565b604051808215151515815260200191505060405180910390f35b34801561064357600080fd5b50610664600480360381019080803515159060200190929190505050611257565b005b34801561067257600080fd5b5061067b611274565b6040518082815260200191505060405180910390f35b34801561069d57600080fd5b506106d2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061127a565b005b3480156106e057600080fd5b5061073b600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506112e9565b005b34801561074957600080fd5b506107526114fb565b604051808215151515815260200191505060405180910390f35b80600b60006101000a81548160ff02191690831515021790555050565b60075481565b6000600a60405180807f6f70656e506f6c6c000000000000000000000000000000000000000000000000815250600801905090815260200160405180910390209050338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b6108256118b3565b80600a836040518082805190602001908083835b60208310151561085e5780518252602082019150602081019050602083039250610839565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000155602082015181600101556040820151816002015560608201518160030190805190602001906108cb929190611954565b5060808201518160040190805190602001906108e8929190611954565b5060a0820151816005019080519060200190610905929190611954565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff0219169083151502179055509050505050565b600080600060608060606000806000806000610a3f6118b3565b600a8d6040518082805190602001908083835b602083101515610a775780518252602082019150602081019050602083039250610a52565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206101606040519081016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b6e5780601f10610b4357610100808354040283529160200191610b6e565b820191906000526020600020905b815481529060010190602001808311610b5157829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c105780601f10610be557610100808354040283529160200191610c10565b820191906000526020600020905b815481529060010190602001808311610bf357829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518797508696508595509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b600b60009054906101000a900460ff1681565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ed257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060035414151515610f8c57600080fd5b60046000600354815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610ffb57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156110b857600080fd5b505af11580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b8101908080519060200190929190505050905060008111151561110457600080fd5b81156111465761111f8160055461151a90919063ffffffff16565b60058190555061113b600160075461151a90919063ffffffff16565b60078190555061117e565b61115b8160065461151a90919063ffffffff16565b600681905550611177600160085461151a90919063ffffffff16565b6008819055505b600160046000600354815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60019054906101000a900460ff1681565b80600b60016101000a81548160ff02191690831515021790555050565b60085481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112d557600080fd5b60056001819055506112e681611536565b50565b6000600a826040518082805190602001908083835b60208310151561132357805182526020820191506020810190506020830392506112fe565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600081600001819055506000816001018190555060008160020181905550602060405190810160405280600081525081600301908051906020019061139e9291906119d4565b5060206040519081016040528060008152508160040190805190602001906113c79291906119d4565b5060206040519081016040528060008152508160050190805190602001906113f09291906119d4565b5060008160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160146101000a81548160ff02191690831515021790555060008160080160156101000a81548160ff0219169083151502179055505050565b6000611505611630565b80611514575061151361174b565b5b15905090565b6000818301905082811015151561152d57fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561157257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061172d600a61171f6002611711600954600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116c857600080fd5b505af11580156116dc573d6000803e3d6000fd5b505050506040513d60208110156116f257600080fd5b810190808051906020019092919050505061186590919063ffffffff16565b61186590919063ffffffff16565b61189d90919063ffffffff16565b61174460095460065461186590919063ffffffff16565b1015905090565b6000611848600a61183a600861182c600954600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117e357600080fd5b505af11580156117f7573d6000803e3d6000fd5b505050506040513d602081101561180d57600080fd5b810190808051906020019092919050505061186590919063ffffffff16565b61186590919063ffffffff16565b61189d90919063ffffffff16565b61185f60095460055461186590919063ffffffff16565b11905090565b6000808314156118785760009050611897565b818302905081838281151561188957fe5b0414151561189357fe5b8090505b92915050565b600081838115156118aa57fe5b04905092915050565b61016060405190810160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061199557805160ff19168380011785556119c3565b828001600101855582156119c3579182015b828111156119c25782518255916020019190600101906119a7565b5b5090506119d09190611a54565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a1557805160ff1916838001178555611a43565b82800160010185558215611a43579182015b82811115611a42578251825591602001919060010190611a27565b5b509050611a509190611a54565b5090565b611a7691905b80821115611a72576000816000905550600101611a5a565b5090565b905600a165627a7a723058204a9aaba20422b5b54408f2f60dcda12b226c789f355717a5d011bf0c613e89c30029",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630b7bff231461010c578063255b5a211461013b5780634017605814610166578063480aa6541461017d57806351542e3a146101a8578063547d8020146102115780636c2626a51461048f5780636ecb7244146104be578063715018a6146104e95780637ace48e7146105005780638da5cb5b1461052f57806392d4707814610586578063b2bdfa7b146105b1578063cb84b7d014610608578063d6407b8714610637578063de15e28814610666578063f2fde38b14610691578063f427b135146106d4578063fcfff16f1461073d575b600080fd5b34801561011857600080fd5b5061013960048036038101908080351515906020019092919050505061076c565b005b34801561014757600080fd5b50610150610789565b6040518082815260200191505060405180910390f35b34801561017257600080fd5b5061017b61078f565b005b34801561018957600080fd5b50610192610817565b6040518082815260200191505060405180910390f35b3480156101b457600080fd5b5061020f600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061081d565b005b34801561021d57600080fd5b50610278600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610a25565b604051808c81526020018b81526020018a81526020018060200180602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001861515151581526020018515151515815260200184810384528c818151815260200191508051906020019080838360005b8381101561037c578082015181840152602081019050610361565b50505050905090810190601f1680156103a95780820380516001836020036101000a031916815260200191505b5084810383528b818151815260200191508051906020019080838360005b838110156103e25780820151818401526020810190506103c7565b50505050905090810190601f16801561040f5780820380516001836020036101000a031916815260200191505b5084810382528a818151815260200191508051906020019080838360005b8381101561044857808201518184015260208101905061042d565b50505050905090810190601f1680156104755780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b34801561049b57600080fd5b506104a4610e5e565b604051808215151515815260200191505060405180910390f35b3480156104ca57600080fd5b506104d3610e71565b6040518082815260200191505060405180910390f35b3480156104f557600080fd5b506104fe610e77565b005b34801561050c57600080fd5b5061052d600480360381019080803515159060200190929190505050610f79565b005b34801561053b57600080fd5b506105446111f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561059257600080fd5b5061059b611215565b6040518082815260200191505060405180910390f35b3480156105bd57600080fd5b506105c661121b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561061457600080fd5b5061061d611244565b604051808215151515815260200191505060405180910390f35b34801561064357600080fd5b50610664600480360381019080803515159060200190929190505050611257565b005b34801561067257600080fd5b5061067b611274565b6040518082815260200191505060405180910390f35b34801561069d57600080fd5b506106d2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061127a565b005b3480156106e057600080fd5b5061073b600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506112e9565b005b34801561074957600080fd5b506107526114fb565b604051808215151515815260200191505060405180910390f35b80600b60006101000a81548160ff02191690831515021790555050565b60075481565b6000600a60405180807f6f70656e506f6c6c000000000000000000000000000000000000000000000000815250600801905090815260200160405180910390209050338160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b6108256118b3565b80600a836040518082805190602001908083835b60208310151561085e5780518252602082019150602081019050602083039250610839565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000155602082015181600101556040820151816002015560608201518160030190805190602001906108cb929190611954565b5060808201518160040190805190602001906108e8929190611954565b5060a0820151816005019080519060200190610905929190611954565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff0219169083151502179055509050505050565b600080600060608060606000806000806000610a3f6118b3565b600a8d6040518082805190602001908083835b602083101515610a775780518252602082019150602081019050602083039250610a52565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206101606040519081016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b6e5780601f10610b4357610100808354040283529160200191610b6e565b820191906000526020600020905b815481529060010190602001808311610b5157829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c105780601f10610be557610100808354040283529160200191610c10565b820191906000526020600020905b815481529060010190602001808311610bf357829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518797508696508595509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b600b60009054906101000a900460ff1681565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ed257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060035414151515610f8c57600080fd5b60046000600354815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610ffb57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156110b857600080fd5b505af11580156110cc573d6000803e3d6000fd5b505050506040513d60208110156110e257600080fd5b8101908080519060200190929190505050905060008111151561110457600080fd5b81156111465761111f8160055461151a90919063ffffffff16565b60058190555061113b600160075461151a90919063ffffffff16565b60078190555061117e565b61115b8160065461151a90919063ffffffff16565b600681905550611177600160085461151a90919063ffffffff16565b6008819055505b600160046000600354815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60019054906101000a900460ff1681565b80600b60016101000a81548160ff02191690831515021790555050565b60085481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112d557600080fd5b60056001819055506112e681611536565b50565b6000600a826040518082805190602001908083835b60208310151561132357805182526020820191506020810190506020830392506112fe565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209050600081600001819055506000816001018190555060008160020181905550602060405190810160405280600081525081600301908051906020019061139e9291906119d4565b5060206040519081016040528060008152508160040190805190602001906113c79291906119d4565b5060206040519081016040528060008152508160050190805190602001906113f09291906119d4565b5060008160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160146101000a81548160ff02191690831515021790555060008160080160156101000a81548160ff0219169083151502179055505050565b6000611505611630565b80611514575061151361174b565b5b15905090565b6000818301905082811015151561152d57fe5b80905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561157257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061172d600a61171f6002611711600954600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116c857600080fd5b505af11580156116dc573d6000803e3d6000fd5b505050506040513d60208110156116f257600080fd5b810190808051906020019092919050505061186590919063ffffffff16565b61186590919063ffffffff16565b61189d90919063ffffffff16565b61174460095460065461186590919063ffffffff16565b1015905090565b6000611848600a61183a600861182c600954600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156117e357600080fd5b505af11580156117f7573d6000803e3d6000fd5b505050506040513d602081101561180d57600080fd5b810190808051906020019092919050505061186590919063ffffffff16565b61186590919063ffffffff16565b61189d90919063ffffffff16565b61185f60095460055461186590919063ffffffff16565b11905090565b6000808314156118785760009050611897565b818302905081838281151561188957fe5b0414151561189357fe5b8090505b92915050565b600081838115156118aa57fe5b04905092915050565b61016060405190810160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061199557805160ff19168380011785556119c3565b828001600101855582156119c3579182015b828111156119c25782518255916020019190600101906119a7565b5b5090506119d09190611a54565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a1557805160ff1916838001178555611a43565b82800160010185558215611a43579182015b82811115611a42578251825591602001919060010190611a27565b5b509050611a509190611a54565b5090565b611a7691905b80821115611a72576000816000905550600101611a5a565b5090565b905600a165627a7a723058204a9aaba20422b5b54408f2f60dcda12b226c789f355717a5d011bf0c613e89c30029",
  "sourceMap": "199:525:6:-;;;639:5:5;606:38;;262:63:6;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:63:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;316:6;607:10:58;599:5;;:18;;;;;;;;;;;;;;;;;;287:6:5;279:5;;:14;;;;;;;;;;;;;;;;;;232:67;262:63:6;199:525;;;;;;",
  "deployedSourceMap": "199:525:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:80:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:27:5;;;;;;;;;;;;;;;;;;;;;;;579:142:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;579:142:6;;;;;;375:28:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;375:28:5;;;;;;;;;;;;;;;;;;;;;;;411:138:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;411:138:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:585;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:27:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;331:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;500:35:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;500:35:5;;;;;;;;;;;;;;;;;;;;;;;1128:114:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:114:58;;;;;;1368:578:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1368:578:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;255:20:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;255:20:58;;;;;;;;;;;;;;;;;;;;;;;;;;;460:35:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;460:35:5;;;;;;;;;;;;;;;;;;;;;;;784:74:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;784:74:58;;;;;;;;;;;;;;;;;;;;;;;;;;;455:27:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;491:80;;8:9:-1;5:2;;;30:1;27;20:12;5:2;491:80:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:27:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;572:27:5;;;;;;;;;;;;;;;;;;;;;;;1430:121:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1430:121:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:440:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1008:105:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1008:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;;367:80:6;438:1;420:15;;:19;;;;;;;;;;;;;;;;;;367:80;:::o;540:27:5:-;;;;:::o;579:142:6:-;618:28;649:6;:18;;;;;;;;;;;;;;;;;;;;;;;;618:49;;703:10;676:11;:24;;;:37;;;;;;;;;;;;;;;;;;579:142;:::o;375:28:5:-;;;;:::o;411:138:8:-;477:27;;:::i;:::-;532:11;511:6;518:10;511:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;511:18:8;;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:138;;:::o;1001:585::-;1076:7;1090;1104;1118:6;1138;1158;1178:7;1192;1206;1220:4;1231;1250:20;;:::i;:::-;1273:6;1280:10;1273:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1273:18:8;;;;;;;;;;;;;;;;;;;;;1250:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1314:4;:14;;;1337:4;:15;;;1361:4;:14;;;1384:4;:16;;;1409:4;:17;;;1435:4;:16;;;1460:4;:17;;;1486:4;:18;;;1513:4;:17;;;1539:4;:11;;;1559:4;:14;;;1298:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:585;;;;;;;;;;;;;;:::o;331:27:6:-;;;;;;;;;;;;;:::o;500:35:5:-;;;;:::o;1128:114:58:-;758:5;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1205:5;;;;;;;;;;;1186:25;;;;;;;;;;;;1234:1;1218:5;;:18;;;;;;;;;;;;;;;;;;1128:114::o;1368:578:5:-;1522:18;1442:1;1425:13;;:18;;1417:27;;;;;;;;1460:16;:31;1477:13;;1460:31;;;;;;;;;;;:40;;:52;1501:10;1460:52;;;;;;;;;;;;;;;;;;;;;;;;;1459:53;1451:62;;;;;;;;1543:5;;;;;;;;;;;:15;;;1559:10;1543:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1543:27:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1543:27:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1543:27:5;;;;;;;;;;;;;;;;1522:48;;1600:1;1587:10;:14;1579:23;;;;;;;;1615:7;1611:262;;;1656:36;1681:10;1656:20;;:24;;:36;;;;:::i;:::-;1633:20;:59;;;;1716:19;1733:1;1716:12;;:16;;:19;;;;:::i;:::-;1701:12;:34;;;;1611:262;;;1786:36;1811:10;1786:20;;:24;;:36;;;;:::i;:::-;1763:20;:59;;;;1846:19;1863:1;1846:12;;:16;;:19;;;;:::i;:::-;1831:12;:34;;;;1611:262;1936:4;1881:16;:31;1898:13;;1881:31;;;;;;;;;;;:40;;:52;1922:10;1881:52;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;1368:578;;:::o;255:20:58:-;;;;;;;;;;;;;:::o;460:35:5:-;;;;:::o;784:74:58:-;824:7;847:5;;;;;;;;;;;840:12;;784:74;:::o;455:27:6:-;;;;;;;;;;;;;:::o;491:80::-;562:1;544:15;;:19;;;;;;;;;;;;;;;;;;491:80;:::o;572:27:5:-;;;;:::o;1430:121:58:-;758:5;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1508:1;1500:5;:9;;;;1516:29;1535:9;1516:18;:29::i;:::-;1430:121;:::o;555:440:8:-;617:21;641:6;648:10;641:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;641:18:8;;;;;;;;;;;;;;;;;;;;;617:42;;685:1;668:4;:14;;:18;;;;711:1;693:4;:15;;:19;;;;736:1;719:4;:14;;:18;;;;744:21;;;;;;;;;;;;;:4;:16;;:21;;;;;;;;;;;;:::i;:::-;;772:22;;;;;;;;;;;;;:4;:17;;:22;;;;;;;;;;;;:::i;:::-;;801:21;;;;;;;;;;;;;:4;:16;;:21;;;;;;;;;;;;:::i;:::-;;857:1;829:4;:17;;;:30;;;;;;;;;;;;;;;;;;895:1;866:4;:18;;;:31;;;;;;;;;;;;;;;;;;932:1;904:4;:17;;;:30;;;;;;;;;;;;;;;;;;955:5;941:4;:11;;;:19;;;;;;;;;;;;;;;;;;984:5;967:4;:14;;;:22;;;;;;;;;;;;;;;;;;555:440;;:::o;1008:105:5:-;1046:4;1068:17;:15;:17::i;:::-;:38;;;;1089:17;:15;:17::i;:::-;1068:38;1066:41;1059:48;;1008:105;:::o;1292:132:61:-;1352:9;1379:2;1374;:7;1370:11;;1400:2;1395:1;:7;;1388:15;;;;;;1417:1;1410:8;;1292:132;;;;:::o;1692:175:58:-;1784:1;1763:23;;:9;:23;;;;1755:32;;;;;;;;1827:9;1799:38;;1820:5;;;;;;;;;;;1799:38;;;;;;;;;;;;1852:9;1844:5;;:17;;;;;;;;;;;;;;;;;;1692:175;:::o;829:173:5:-;878:4;942:54;993:2;942:46;986:1;942:39;966:14;;942:5;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;942:19:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;942:19:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;942:19:5;;;;;;;;;;;;;;;;:23;;:39;;;;:::i;:::-;:43;;:46;;;;:::i;:::-;:50;;:54;;;;:::i;:::-;898:40;923:14;;898:20;;:24;;:40;;;;:::i;:::-;:98;;891:105;;829:173;:::o;651:172::-;700:4;763:54;814:2;763:46;807:1;763:39;787:14;;763:5;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;763:19:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;763:19:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;763:19:5;;;;;;;;;;;;;;;;:23;;:39;;;;:::i;:::-;:43;;:46;;;;:::i;:::-;:50;;:54;;;;:::i;:::-;720:40;745:14;;720:20;;:24;;:40;;;;:::i;:::-;:97;713:104;;651:172;:::o;223:391:61:-;283:9;519:1;513:2;:7;509:38;;;538:1;531:8;;;;509:38;564:2;559;:7;555:11;;590:2;584;580:1;:6;;;;;;;;:12;573:20;;;;;;607:1;600:8;;223:391;;;;;:::o;701:288::-;761:7;981:2;976;:7;;;;;;;;969:14;;701:288;;;;:::o;199:525:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.6.0;\r\nimport './utility/Ownable.sol';\r\nimport './utility/SafeMath.sol';\r\nimport './AmendmentPoll.sol';\r\nimport './token/ActiveToken.sol';\r\nimport './ContractStub.sol';\r\n\r\ncontract AmendmentPollStub is AmendmentPoll, ContractStub {\r\n  constructor (ActiveToken _token) public AmendmentPoll(_token){}\r\n    bool public proposalsPassed;\r\n\r\n    function setProposalsPassed (bool b) public {\r\n      proposalsPassed = b;\r\n    }\r\n\r\n    bool public proposalsFailed;\r\n\r\n    function setProposalsFailed (bool b) public {\r\n      proposalsFailed = b;\r\n    }\r\n\r\n    function openPoll () external {\r\n      CallData storage methodState = method['openPoll'];\r\n      methodState.firstAddress = msg.sender;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\tetris\\SUWiserLLC_serge\\contracts\\AmendmentPollStub.sol",
  "ast": {
    "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/AmendmentPollStub.sol",
    "exportedSymbols": {
      "AmendmentPollStub": [
        802
      ]
    },
    "id": 803,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 742,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/Ownable.sol",
        "file": "./utility/Ownable.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 8669,
        "src": "34:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/SafeMath.sol",
        "file": "./utility/SafeMath.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 8888,
        "src": "67:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/AmendmentPoll.sol",
        "file": "./AmendmentPoll.sol",
        "id": 745,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 741,
        "src": "101:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/token/ActiveToken.sol",
        "file": "./token/ActiveToken.sol",
        "id": 746,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 6632,
        "src": "132:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/ContractStub.sol",
        "file": "./ContractStub.sol",
        "id": 747,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1021,
        "src": "167:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 748,
              "name": "AmendmentPoll",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 740,
              "src": "229:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AmendmentPoll_$740",
                "typeString": "contract AmendmentPoll"
              }
            },
            "id": 749,
            "nodeType": "InheritanceSpecifier",
            "src": "229:13:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 750,
              "name": "ContractStub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1020,
              "src": "244:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractStub_$1020",
                "typeString": "contract ContractStub"
              }
            },
            "id": 751,
            "nodeType": "InheritanceSpecifier",
            "src": "244:12:6"
          }
        ],
        "contractDependencies": [
          740,
          1020,
          8668
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802,
          1020,
          740,
          8668
        ],
        "name": "AmendmentPollStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "323:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 760,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 756,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 753,
                    "src": "316:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  }
                ],
                "id": 757,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 755,
                  "name": "AmendmentPoll",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 740,
                  "src": "302:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AmendmentPoll_$740_$",
                    "typeString": "type(contract AmendmentPoll)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "302:21:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "275:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ActiveToken_$6631",
                    "typeString": "contract ActiveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 752,
                    "name": "ActiveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6631,
                    "src": "275:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:6"
            },
            "scope": 802,
            "src": "262:63:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 762,
            "name": "proposalsPassed",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "331:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 761,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "331:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "411:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 767,
                      "name": "proposalsPassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        762
                      ],
                      "referencedDeclaration": 762,
                      "src": "420:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 768,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "438:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "420:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "420:19:6"
                }
              ]
            },
            "documentation": null,
            "id": 772,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setProposalsPassed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "396:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:8:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:6"
            },
            "scope": 802,
            "src": "367:80:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 774,
            "name": "proposalsFailed",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "455:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 773,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "455:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "535:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 779,
                      "name": "proposalsFailed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        774
                      ],
                      "referencedDeclaration": 774,
                      "src": "544:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "562:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "544:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "544:19:6"
                }
              ]
            },
            "documentation": null,
            "id": 784,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setProposalsFailed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "520:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "519:8:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:6"
            },
            "scope": 802,
            "src": "491:80:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "609:112:6",
              "statements": [
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "618:28:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 787,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "618:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "649:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "6f70656e506f6c6c",
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "656:10:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_997671e2efcf87aa01745ab61e2df05bbb48f96fa4caa8da38af23fa56d2b582",
                        "typeString": "literal_string \"openPoll\""
                      },
                      "value": "openPoll"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "649:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "618:49:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "676:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "676:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9387,
                        "src": "703:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "703:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "676:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "676:37:6"
                }
              ]
            },
            "documentation": null,
            "id": 801,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "openPoll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:6"
            },
            "scope": 802,
            "src": "579:142:6",
            "stateMutability": "nonpayable",
            "superFunction": 660,
            "visibility": "external"
          }
        ],
        "scope": 803,
        "src": "199:525:6"
      }
    ],
    "src": "0:726:6"
  },
  "legacyAST": {
    "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/AmendmentPollStub.sol",
    "exportedSymbols": {
      "AmendmentPollStub": [
        802
      ]
    },
    "id": 803,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 742,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/Ownable.sol",
        "file": "./utility/Ownable.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 8669,
        "src": "34:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/SafeMath.sol",
        "file": "./utility/SafeMath.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 8888,
        "src": "67:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/AmendmentPoll.sol",
        "file": "./AmendmentPoll.sol",
        "id": 745,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 741,
        "src": "101:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/token/ActiveToken.sol",
        "file": "./token/ActiveToken.sol",
        "id": 746,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 6632,
        "src": "132:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/ContractStub.sol",
        "file": "./ContractStub.sol",
        "id": 747,
        "nodeType": "ImportDirective",
        "scope": 803,
        "sourceUnit": 1021,
        "src": "167:28:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 748,
              "name": "AmendmentPoll",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 740,
              "src": "229:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AmendmentPoll_$740",
                "typeString": "contract AmendmentPoll"
              }
            },
            "id": 749,
            "nodeType": "InheritanceSpecifier",
            "src": "229:13:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 750,
              "name": "ContractStub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1020,
              "src": "244:12:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractStub_$1020",
                "typeString": "contract ContractStub"
              }
            },
            "id": 751,
            "nodeType": "InheritanceSpecifier",
            "src": "244:12:6"
          }
        ],
        "contractDependencies": [
          740,
          1020,
          8668
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 802,
        "linearizedBaseContracts": [
          802,
          1020,
          740,
          8668
        ],
        "name": "AmendmentPollStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 759,
              "nodeType": "Block",
              "src": "323:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 760,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 756,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 753,
                    "src": "316:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  }
                ],
                "id": 757,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 755,
                  "name": "AmendmentPoll",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 740,
                  "src": "302:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AmendmentPoll_$740_$",
                    "typeString": "type(contract AmendmentPoll)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "302:21:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "275:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ActiveToken_$6631",
                    "typeString": "contract ActiveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 752,
                    "name": "ActiveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6631,
                    "src": "275:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "323:0:6"
            },
            "scope": 802,
            "src": "262:63:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 762,
            "name": "proposalsPassed",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "331:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 761,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "331:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "411:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 767,
                      "name": "proposalsPassed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        762
                      ],
                      "referencedDeclaration": 762,
                      "src": "420:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 768,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "438:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "420:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "420:19:6"
                }
              ]
            },
            "documentation": null,
            "id": 772,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setProposalsPassed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 764,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "396:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:8:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:6"
            },
            "scope": 802,
            "src": "367:80:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 774,
            "name": "proposalsFailed",
            "nodeType": "VariableDeclaration",
            "scope": 802,
            "src": "455:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 773,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "455:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "535:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 779,
                      "name": "proposalsFailed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        774
                      ],
                      "referencedDeclaration": 774,
                      "src": "544:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "562:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "544:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "544:19:6"
                }
              ]
            },
            "documentation": null,
            "id": 784,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setProposalsFailed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "520:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "519:8:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:6"
            },
            "scope": 802,
            "src": "491:80:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 800,
              "nodeType": "Block",
              "src": "609:112:6",
              "statements": [
                {
                  "assignments": [
                    788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 788,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 801,
                      "src": "618:28:6",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 787,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "618:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "649:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 791,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "6f70656e506f6c6c",
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "656:10:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_997671e2efcf87aa01745ab61e2df05bbb48f96fa4caa8da38af23fa56d2b582",
                        "typeString": "literal_string \"openPoll\""
                      },
                      "value": "openPoll"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "649:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "618:49:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 788,
                        "src": "676:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "676:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9387,
                        "src": "703:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "703:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "676:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 799,
                  "nodeType": "ExpressionStatement",
                  "src": "676:37:6"
                }
              ]
            },
            "documentation": null,
            "id": 801,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "openPoll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "597:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:6"
            },
            "scope": 802,
            "src": "579:142:6",
            "stateMutability": "nonpayable",
            "superFunction": 660,
            "visibility": "external"
          }
        ],
        "scope": 803,
        "src": "199:525:6"
      }
    ],
    "src": "0:726:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2022-02-22T17:36:20.195Z"
}