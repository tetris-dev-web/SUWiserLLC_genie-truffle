{
  "contractName": "DividendsStub",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalDividendPoints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "addMethod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "callHistory",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastDividendPoints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "dividendOwedTo",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "methodName",
          "type": "string"
        }
      ],
      "name": "resetMethod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "ReceiveDividends",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DividendCollection",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "distributeDividend",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "receiveDividends",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526c7e37be2022c0914b268000000060035534801561002157600080fd5b506040516020806113a28339810180604052810190808051906020019092919050505080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061130c806100966000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632113342d1461009357806351542e3a146100be5780635319504a14610127578063547d80201461018257806379fc468714610400578063806985f71461040a578063b107a27c14610461578063f427b135146104b8575b600080fd5b34801561009f57600080fd5b506100a8610521565b6040518082815260200191505060405180910390f35b3480156100ca57600080fd5b50610125600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610527565b005b34801561013357600080fd5b50610168600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072f565b604051808215151515815260200191505060405180910390f35b34801561018e57600080fd5b506101e9600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610861565b604051808c81526020018b81526020018a81526020018060200180602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001861515151581526020018515151515815260200184810384528c818151815260200191508051906020019080838360005b838110156102ed5780820151818401526020810190506102d2565b50505050905090810190601f16801561031a5780820380516001836020036101000a031916815260200191505b5084810383528b818151815260200191508051906020019080838360005b83811015610353578082015181840152602081019050610338565b50505050905090810190601f1680156103805780820380516001836020036101000a031916815260200191505b5084810382528a818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b610408610c9a565b005b34801561041657600080fd5b5061044b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d05565b6040518082815260200191505060405180910390f35b34801561046d57600080fd5b506104a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d1d565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b5061051f600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ea1565b005b60025481565b61052f61111a565b806004836040518082805190602001908083835b6020831015156105685780518252602082019150602081019050602083039250610543565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000155602082015181600101556040820151816002015560608201518160030190805190602001906105d59291906111bb565b5060808201518160040190805190602001906105f29291906111bb565b5060a082015181600501908051906020019061060f9291906111bb565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff0219169083151502179055509050505050565b600080600460405180807f646973747269627574654469766964656e640000000000000000000000000000815250601201905090815260200160405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561081357828160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610857565b828160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001915050919050565b60008060006060806060600080600080600061087b61111a565b60048d6040518082805190602001908083835b6020831015156108b3578051825260208201915060208101905060208303925061088e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206101606040519081016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518797508696508595509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b6000600460405180807f726563656976654469766964656e64730000000000000000000000000000000081525060100190509081526020016040518091039020905060018160080160146101000a81548160ff02191690831515021790555034816000018190555050565b60016020528060005260406000206000915090505481565b6000806000610d76600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546002546110b390919063ffffffff16565b91506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e3457600080fd5b505af1158015610e48573d6000803e3d6000fd5b505050506040513d6020811015610e5e57600080fd5b81019080805190602001909291905050509050610e98600354610e8a84846110cc90919063ffffffff16565b61110490919063ffffffff16565b92505050919050565b60006004826040518082805190602001908083835b602083101515610edb5780518252602082019150602081019050602083039250610eb6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816000018190555060008160010181905550600081600201819055506020604051908101604052806000815250816003019080519060200190610f5692919061123b565b506020604051908101604052806000815250816004019080519060200190610f7f92919061123b565b506020604051908101604052806000815250816005019080519060200190610fa892919061123b565b5060008160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160146101000a81548160ff02191690831515021790555060008160080160156101000a81548160ff0219169083151502179055505050565b60008282111515156110c157fe5b818303905092915050565b6000808314156110df57600090506110fe565b81830290508183828115156110f057fe5b041415156110fa57fe5b8090505b92915050565b6000818381151561111157fe5b04905092915050565b61016060405190810160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111fc57805160ff191683800117855561122a565b8280016001018555821561122a579182015b8281111561122957825182559160200191906001019061120e565b5b50905061123791906112bb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061127c57805160ff19168380011785556112aa565b828001600101855582156112aa579182015b828111156112a957825182559160200191906001019061128e565b5b5090506112b791906112bb565b5090565b6112dd91905b808211156112d95760008160009055506001016112c1565b5090565b905600a165627a7a723058200db8d2daef3667d288259db78b2760ef87307aaf0acaf297fa181244095ed3d40029",
  "deployedBytecode": "0x60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632113342d1461009357806351542e3a146100be5780635319504a14610127578063547d80201461018257806379fc468714610400578063806985f71461040a578063b107a27c14610461578063f427b135146104b8575b600080fd5b34801561009f57600080fd5b506100a8610521565b6040518082815260200191505060405180910390f35b3480156100ca57600080fd5b50610125600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610527565b005b34801561013357600080fd5b50610168600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061072f565b604051808215151515815260200191505060405180910390f35b34801561018e57600080fd5b506101e9600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610861565b604051808c81526020018b81526020018a81526020018060200180602001806020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001861515151581526020018515151515815260200184810384528c818151815260200191508051906020019080838360005b838110156102ed5780820151818401526020810190506102d2565b50505050905090810190601f16801561031a5780820380516001836020036101000a031916815260200191505b5084810383528b818151815260200191508051906020019080838360005b83811015610353578082015181840152602081019050610338565b50505050905090810190601f1680156103805780820380516001836020036101000a031916815260200191505b5084810382528a818151815260200191508051906020019080838360005b838110156103b957808201518184015260208101905061039e565b50505050905090810190601f1680156103e65780820380516001836020036101000a031916815260200191505b509e50505050505050505050505050505060405180910390f35b610408610c9a565b005b34801561041657600080fd5b5061044b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d05565b6040518082815260200191505060405180910390f35b34801561046d57600080fd5b506104a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d1d565b6040518082815260200191505060405180910390f35b3480156104c457600080fd5b5061051f600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610ea1565b005b60025481565b61052f61111a565b806004836040518082805190602001908083835b6020831015156105685780518252602082019150602081019050602083039250610543565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000155602082015181600101556040820151816002015560608201518160030190805190602001906105d59291906111bb565b5060808201518160040190805190602001906105f29291906111bb565b5060a082015181600501908051906020019061060f9291906111bb565b5060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff0219169083151502179055506101408201518160080160156101000a81548160ff0219169083151502179055509050505050565b600080600460405180807f646973747269627574654469766964656e640000000000000000000000000000815250601201905090815260200160405180910390209050600073ffffffffffffffffffffffffffffffffffffffff168160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561081357828160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610857565b828160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6001915050919050565b60008060006060806060600080600080600061087b61111a565b60048d6040518082805190602001908083835b6020831015156108b3578051825260208201915060208101905060208303925061088e565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206101606040519081016040529081600082015481526020016001820154815260200160028201548152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b50505050508152602001600582018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b505050505081526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff161515151581526020016008820160159054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001518861010001518961012001518a61014001518797508696508595509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b6000600460405180807f726563656976654469766964656e64730000000000000000000000000000000081525060100190509081526020016040518091039020905060018160080160146101000a81548160ff02191690831515021790555034816000018190555050565b60016020528060005260406000206000915090505481565b6000806000610d76600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546002546110b390919063ffffffff16565b91506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610e3457600080fd5b505af1158015610e48573d6000803e3d6000fd5b505050506040513d6020811015610e5e57600080fd5b81019080805190602001909291905050509050610e98600354610e8a84846110cc90919063ffffffff16565b61110490919063ffffffff16565b92505050919050565b60006004826040518082805190602001908083835b602083101515610edb5780518252602082019150602081019050602083039250610eb6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902090506000816000018190555060008160010181905550600081600201819055506020604051908101604052806000815250816003019080519060200190610f5692919061123b565b506020604051908101604052806000815250816004019080519060200190610f7f92919061123b565b506020604051908101604052806000815250816005019080519060200190610fa892919061123b565b5060008160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008160080160146101000a81548160ff02191690831515021790555060008160080160156101000a81548160ff0219169083151502179055505050565b60008282111515156110c157fe5b818303905092915050565b6000808314156110df57600090506110fe565b81830290508183828115156110f057fe5b041415156110fa57fe5b8090505b92915050565b6000818381151561111157fe5b04905092915050565b61016060405190810160405280600081526020016000815260200160008152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106111fc57805160ff191683800117855561122a565b8280016001018555821561122a579182015b8281111561122957825182559160200191906001019061120e565b5b50905061123791906112bb565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061127c57805160ff19168380011785556112aa565b828001600101855582156112aa579182015b828111156112a957825182559160200191906001019061128e565b5b5090506112b791906112bb565b5090565b6112dd91905b808211156112d95760008160009055506001016112c1565b5090565b905600a165627a7a723058200db8d2daef3667d288259db78b2760ef87307aaf0acaf297fa181244095ed3d40029",
  "sourceMap": "184:672:32:-;;;563:5:30;528:40;;272:63:32;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:63:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:6;287::30;279:5;;:14;;;;;;;;;;;;;;;;;;232:67;272:63:32;184:672;;;;;;",
  "deployedSourceMap": "184:672:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:34:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:34:30;;;;;;;;;;;;;;;;;;;;;;;411:138:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;411:138:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:318:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:318:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:585:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1001:585:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:188:32;;;;;;305:53:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:53:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:305;;8:9:-1;5:2;;;30:1;27;20:12;5:2;575:305:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:440:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;555:440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:34:30;;;;:::o;411:138:8:-;477:27;;:::i;:::-;532:11;511:6;518:10;511:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;511:18:8;;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:138;;:::o;341:318:32:-;404:4;417:28;448:6;:28;;;;;;;;;;;;;;;;;;;;;;;;417:59;;523:1;487:38;;:11;:24;;;;;;;;;;;;:38;;;483:153;;;563:7;536:11;:24;;;:34;;;;;;;;;;;;;;;;;;483:153;;;621:7;593:11;:25;;;:35;;;;;;;;;;;;;;;;;;483:153;649:4;642:11;;341:318;;;;:::o;1001:585:8:-;1076:7;1090;1104;1118:6;1138;1158;1178:7;1192;1206;1220:4;1231;1250:20;;:::i;:::-;1273:6;1280:10;1273:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1273:18:8;;;;;;;;;;;;;;;;;;;;;1250:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1314:4;:14;;;1337:4;:15;;;1361:4;:14;;;1384:4;:16;;;1409:4;:17;;;1435:4;:16;;;1460:4;:17;;;1486:4;:18;;;1513:4;:17;;;1539:4;:11;;;1559:4;:14;;;1298:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:585;;;;;;;;;;;;;;:::o;665:188:32:-;718:28;749:6;:26;;;;;;;;;;;;;;;;;;;;;;;;718:57;;803:4;782:11;:18;;;:25;;;;;;;;;;;;;;;;;;838:9;814:11;:21;;:33;;;;665:188;:::o;305:53:30:-;;;;;;;;;;;;;;;;;:::o;575:305::-;637:7;653:26;741:21;682:52;706:18;:27;725:7;706:27;;;;;;;;;;;;;;;;682:19;;:23;;:52;;;;:::i;:::-;653:81;;777:5;;;;;;;;;;;765:28;;;794:7;765:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;765:37:30;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;765:37:30;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;765:37:30;;;;;;;;;;;;;;;;741:61;;816:58;858:15;;816:37;834:18;816:13;:17;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;809:65;;575:305;;;;;:::o;555:440:8:-;617:21;641:6;648:10;641:18;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;641:18:8;;;;;;;;;;;;;;;;;;;;;617:42;;685:1;668:4;:14;;:18;;;;711:1;693:4;:15;;:19;;;;736:1;719:4;:14;;:18;;;;744:21;;;;;;;;;;;;;:4;:16;;:21;;;;;;;;;;;;:::i;:::-;;772:22;;;;;;;;;;;;;:4;:17;;:22;;;;;;;;;;;;:::i;:::-;;801:21;;;;;;;;;;;;;:4;:16;;:21;;;;;;;;;;;;:::i;:::-;;857:1;829:4;:17;;;:30;;;;;;;;;;;;;;;;;;895:1;866:4;:18;;;:31;;;;;;;;;;;;;;;;;;932:1;904:4;:17;;;:30;;;;;;;;;;;;;;;;;;955:5;941:4;:11;;;:19;;;;;;;;;;;;;;;;;;984:5;967:4;:14;;;:22;;;;;;;;;;;;;;;;;;555:440;;:::o;1106:119:61:-;1166:7;1195:2;1189;:8;;1182:16;;;;;;1217:2;1212;:7;1205:14;;1106:119;;;;:::o;223:391::-;283:9;519:1;513:2;:7;509:38;;;538:1;531:8;;;;509:38;564:2;559;:7;555:11;;590:2;584;580:1;:6;;;;;;;;:12;573:20;;;;;;607:1;600:8;;223:391;;;;;:::o;701:288::-;761:7;981:2;976;:7;;;;;;;;969:14;;701:288;;;;:::o;184:672:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.6.0;\r\nimport '../utility/SafeMath.sol';\r\nimport '../token/ActiveToken.sol';\r\nimport '../crowdsale/GNITokenCrowdsale.sol';\r\nimport '../ContractStub.sol';\r\n\r\ncontract DividendsStub is Dividends, ContractStub {\r\n  using SafeMath for uint256;\r\n\r\n  constructor (ActiveToken token_) public\r\n  Dividends(token_) {}\r\n\r\n  function distributeDividend(address account) external returns (bool) {\r\n    CallData storage methodState = method['distributeDividend'];\r\n    if (methodState.firstAddress == address(0)) {\r\n      methodState.firstAddress = account;\r\n    } else {\r\n      methodState.secondAddress = account;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function receiveDividends () external payable {\r\n    CallData storage methodState = method['receiveDividends'];\r\n    methodState.called = true;\r\n    methodState.firstUint = msg.value;\r\n  }\r\n}\r\n",
  "sourcePath": "D:\\tetris\\SUWiserLLC_serge\\contracts\\dividends\\DividendsStub.sol",
  "ast": {
    "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/dividends/DividendsStub.sol",
    "exportedSymbols": {
      "DividendsStub": [
        4101
      ]
    },
    "id": 4102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4020,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:32"
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 4021,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 8888,
        "src": "34:33:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/token/ActiveToken.sol",
        "file": "../token/ActiveToken.sol",
        "id": 4022,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 6632,
        "src": "69:34:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/crowdsale/GNITokenCrowdsale.sol",
        "file": "../crowdsale/GNITokenCrowdsale.sol",
        "id": 4023,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 3615,
        "src": "105:44:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/ContractStub.sol",
        "file": "../ContractStub.sol",
        "id": 4024,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 1021,
        "src": "151:29:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4025,
              "name": "Dividends",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3944,
              "src": "210:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dividends_$3944",
                "typeString": "contract Dividends"
              }
            },
            "id": 4026,
            "nodeType": "InheritanceSpecifier",
            "src": "210:9:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4027,
              "name": "ContractStub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1020,
              "src": "221:12:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractStub_$1020",
                "typeString": "contract ContractStub"
              }
            },
            "id": 4028,
            "nodeType": "InheritanceSpecifier",
            "src": "221:12:32"
          }
        ],
        "contractDependencies": [
          1020,
          3944
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4101,
        "linearizedBaseContracts": [
          4101,
          1020,
          3944
        ],
        "name": "DividendsStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4031,
            "libraryName": {
              "contractScope": null,
              "id": 4029,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8887,
              "src": "245:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8887",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "239:27:32",
            "typeName": {
              "id": 4030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4039,
              "nodeType": "Block",
              "src": "333:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 4040,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4036,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4033,
                    "src": "325:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  }
                ],
                "id": 4037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4035,
                  "name": "Dividends",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3944,
                  "src": "315:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Dividends_$3944_$",
                    "typeString": "type(contract Dividends)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "315:17:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4033,
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "285:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ActiveToken_$6631",
                    "typeString": "contract ActiveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4032,
                    "name": "ActiveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6631,
                    "src": "285:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "284:20:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:32"
            },
            "scope": 4101,
            "src": "272:63:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4076,
              "nodeType": "Block",
              "src": "410:249:32",
              "statements": [
                {
                  "assignments": [
                    4048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4048,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4077,
                      "src": "417:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4047,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "417:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4052,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4049,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "448:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4051,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "646973747269627574654469766964656e64",
                      "id": 4050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "455:20:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7f3a37676555a2c93d4453b1456b81f2d2253a54ac75eda4bd52d6d021b3e9cb",
                        "typeString": "literal_string \"distributeDividend\""
                      },
                      "value": "distributeDividend"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "448:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "417:59:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4053,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4048,
                        "src": "487:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "firstAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "487:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "523:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "515:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "515:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "487:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4072,
                    "nodeType": "Block",
                    "src": "584:52:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4066,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4048,
                              "src": "593:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4068,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "593:25:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4069,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "621:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "593:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4071,
                        "nodeType": "ExpressionStatement",
                        "src": "593:35:32"
                      }
                    ]
                  },
                  "id": 4073,
                  "nodeType": "IfStatement",
                  "src": "483:153:32",
                  "trueBody": {
                    "id": 4065,
                    "nodeType": "Block",
                    "src": "527:51:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4059,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4048,
                              "src": "536:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4061,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "firstAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "536:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4062,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "563:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "536:34:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4064,
                        "nodeType": "ExpressionStatement",
                        "src": "536:34:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "649:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4046,
                  "id": 4075,
                  "nodeType": "Return",
                  "src": "642:11:32"
                }
              ]
            },
            "documentation": null,
            "id": 4077,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "distributeDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4042,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4077,
                  "src": "369:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "368:17:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4045,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4077,
                  "src": "404:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4044,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:6:32"
            },
            "scope": 4101,
            "src": "341:318:32",
            "stateMutability": "nonpayable",
            "superFunction": 3903,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4099,
              "nodeType": "Block",
              "src": "711:142:32",
              "statements": [
                {
                  "assignments": [
                    4081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4081,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4100,
                      "src": "718:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4080,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "718:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4085,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4082,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "749:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4084,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "726563656976654469766964656e6473",
                      "id": 4083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "756:18:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02774b30b9046dddc93f84d5d98c6879ea329bb3822df4e2c1734b7396145b07",
                        "typeString": "literal_string \"receiveDividends\""
                      },
                      "value": "receiveDividends"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "749:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "718:57:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4086,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4081,
                        "src": "782:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4088,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "called",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "782:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "803:4:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "782:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4091,
                  "nodeType": "ExpressionStatement",
                  "src": "782:25:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4092,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4081,
                        "src": "814:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4094,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 837,
                      "src": "814:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4095,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9387,
                        "src": "838:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "838:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "814:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4098,
                  "nodeType": "ExpressionStatement",
                  "src": "814:33:32"
                }
              ]
            },
            "documentation": null,
            "id": 4100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "receiveDividends",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:32"
            },
            "payable": true,
            "returnParameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:32"
            },
            "scope": 4101,
            "src": "665:188:32",
            "stateMutability": "payable",
            "superFunction": 3943,
            "visibility": "external"
          }
        ],
        "scope": 4102,
        "src": "184:672:32"
      }
    ],
    "src": "0:858:32"
  },
  "legacyAST": {
    "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/dividends/DividendsStub.sol",
    "exportedSymbols": {
      "DividendsStub": [
        4101
      ]
    },
    "id": 4102,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4020,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:32"
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/SafeMath.sol",
        "file": "../utility/SafeMath.sol",
        "id": 4021,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 8888,
        "src": "34:33:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/token/ActiveToken.sol",
        "file": "../token/ActiveToken.sol",
        "id": 4022,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 6632,
        "src": "69:34:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/crowdsale/GNITokenCrowdsale.sol",
        "file": "../crowdsale/GNITokenCrowdsale.sol",
        "id": 4023,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 3615,
        "src": "105:44:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/ContractStub.sol",
        "file": "../ContractStub.sol",
        "id": 4024,
        "nodeType": "ImportDirective",
        "scope": 4102,
        "sourceUnit": 1021,
        "src": "151:29:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4025,
              "name": "Dividends",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3944,
              "src": "210:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Dividends_$3944",
                "typeString": "contract Dividends"
              }
            },
            "id": 4026,
            "nodeType": "InheritanceSpecifier",
            "src": "210:9:32"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4027,
              "name": "ContractStub",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1020,
              "src": "221:12:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContractStub_$1020",
                "typeString": "contract ContractStub"
              }
            },
            "id": 4028,
            "nodeType": "InheritanceSpecifier",
            "src": "221:12:32"
          }
        ],
        "contractDependencies": [
          1020,
          3944
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 4101,
        "linearizedBaseContracts": [
          4101,
          1020,
          3944
        ],
        "name": "DividendsStub",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4031,
            "libraryName": {
              "contractScope": null,
              "id": 4029,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8887,
              "src": "245:8:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8887",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "239:27:32",
            "typeName": {
              "id": 4030,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "258:7:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 4039,
              "nodeType": "Block",
              "src": "333:2:32",
              "statements": []
            },
            "documentation": null,
            "id": 4040,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4036,
                    "name": "token_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4033,
                    "src": "325:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  }
                ],
                "id": 4037,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4035,
                  "name": "Dividends",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3944,
                  "src": "315:9:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Dividends_$3944_$",
                    "typeString": "type(contract Dividends)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "315:17:32"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4033,
                  "name": "token_",
                  "nodeType": "VariableDeclaration",
                  "scope": 4040,
                  "src": "285:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ActiveToken_$6631",
                    "typeString": "contract ActiveToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4032,
                    "name": "ActiveToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 6631,
                    "src": "285:11:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ActiveToken_$6631",
                      "typeString": "contract ActiveToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "284:20:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:32"
            },
            "scope": 4101,
            "src": "272:63:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4076,
              "nodeType": "Block",
              "src": "410:249:32",
              "statements": [
                {
                  "assignments": [
                    4048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4048,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4077,
                      "src": "417:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4047,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "417:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4052,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4049,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "448:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4051,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "646973747269627574654469766964656e64",
                      "id": 4050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "455:20:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7f3a37676555a2c93d4453b1456b81f2d2253a54ac75eda4bd52d6d021b3e9cb",
                        "typeString": "literal_string \"distributeDividend\""
                      },
                      "value": "distributeDividend"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "448:28:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "417:59:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4053,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4048,
                        "src": "487:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "firstAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "487:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 4056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "523:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "515:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "515:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "487:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4072,
                    "nodeType": "Block",
                    "src": "584:52:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4066,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4048,
                              "src": "593:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4068,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "593:25:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4069,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "621:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "593:35:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4071,
                        "nodeType": "ExpressionStatement",
                        "src": "593:35:32"
                      }
                    ]
                  },
                  "id": 4073,
                  "nodeType": "IfStatement",
                  "src": "483:153:32",
                  "trueBody": {
                    "id": 4065,
                    "nodeType": "Block",
                    "src": "527:51:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 4059,
                              "name": "methodState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4048,
                              "src": "536:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                                "typeString": "struct ContractStub.CallData storage pointer"
                              }
                            },
                            "id": 4061,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "firstAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "536:24:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 4062,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4042,
                            "src": "563:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "536:34:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4064,
                        "nodeType": "ExpressionStatement",
                        "src": "536:34:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "649:4:32",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4046,
                  "id": 4075,
                  "nodeType": "Return",
                  "src": "642:11:32"
                }
              ]
            },
            "documentation": null,
            "id": 4077,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "distributeDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4042,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 4077,
                  "src": "369:15:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "368:17:32"
            },
            "payable": false,
            "returnParameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4045,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4077,
                  "src": "404:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4044,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:6:32"
            },
            "scope": 4101,
            "src": "341:318:32",
            "stateMutability": "nonpayable",
            "superFunction": 3903,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4099,
              "nodeType": "Block",
              "src": "711:142:32",
              "statements": [
                {
                  "assignments": [
                    4081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4081,
                      "name": "methodState",
                      "nodeType": "VariableDeclaration",
                      "scope": 4100,
                      "src": "718:28:32",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                        "typeString": "struct ContractStub.CallData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4080,
                        "name": "CallData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 858,
                        "src": "718:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4085,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 4082,
                      "name": "method",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "749:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_CallData_$858_storage_$",
                        "typeString": "mapping(string memory => struct ContractStub.CallData storage ref)"
                      }
                    },
                    "id": 4084,
                    "indexExpression": {
                      "argumentTypes": null,
                      "hexValue": "726563656976654469766964656e6473",
                      "id": 4083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "756:18:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02774b30b9046dddc93f84d5d98c6879ea329bb3822df4e2c1734b7396145b07",
                        "typeString": "literal_string \"receiveDividends\""
                      },
                      "value": "receiveDividends"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "749:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CallData_$858_storage",
                      "typeString": "struct ContractStub.CallData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "718:57:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4086,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4081,
                        "src": "782:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4088,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "called",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "782:18:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "803:4:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "782:25:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4091,
                  "nodeType": "ExpressionStatement",
                  "src": "782:25:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4092,
                        "name": "methodState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4081,
                        "src": "814:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallData_$858_storage_ptr",
                          "typeString": "struct ContractStub.CallData storage pointer"
                        }
                      },
                      "id": 4094,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "firstUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 837,
                      "src": "814:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4095,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9387,
                        "src": "838:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "838:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "814:33:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4098,
                  "nodeType": "ExpressionStatement",
                  "src": "814:33:32"
                }
              ]
            },
            "documentation": null,
            "id": 4100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "receiveDividends",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:32"
            },
            "payable": true,
            "returnParameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:0:32"
            },
            "scope": 4101,
            "src": "665:188:32",
            "stateMutability": "payable",
            "superFunction": 3943,
            "visibility": "external"
          }
        ],
        "scope": 4102,
        "src": "184:672:32"
      }
    ],
    "src": "0:858:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2022-02-19T19:03:58.489Z"
}