{
  "contractName": "Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600260006101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106648061006e6000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100885780635c975abb1461009f578063715018a6146100ce5780638456cb59146100e55780638da5cb5b146100fc578063b2bdfa7b14610153578063f2fde38b146101aa575b600080fd5b34801561009457600080fd5b5061009d6101ed565b005b3480156100ab57600080fd5b506100b46102ac565b604051808215151515815260200191505060405180910390f35b3480156100da57600080fd5b506100e36102bf565b005b3480156100f157600080fd5b506100fa6103c1565b005b34801561010857600080fd5b50610111610481565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015f57600080fd5b506101686104a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b657600080fd5b506101eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104cf565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024857600080fd5b600260009054906101000a900460ff16151561026357600080fd5b6000600260006101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600260009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041c57600080fd5b600260009054906101000a900460ff1615151561043857600080fd5b6001600260006101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561052a57600080fd5b600560018190555061053b8161053e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561057a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820a4a7ead19a847ce3e6c741bc327694fce990a2c46c764cdcf33342e1e1a976a70029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100885780635c975abb1461009f578063715018a6146100ce5780638456cb59146100e55780638da5cb5b146100fc578063b2bdfa7b14610153578063f2fde38b146101aa575b600080fd5b34801561009457600080fd5b5061009d6101ed565b005b3480156100ab57600080fd5b506100b46102ac565b604051808215151515815260200191505060405180910390f35b3480156100da57600080fd5b506100e36102bf565b005b3480156100f157600080fd5b506100fa6103c1565b005b34801561010857600080fd5b50610111610481565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015f57600080fd5b506101686104a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101b657600080fd5b506101eb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104cf565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024857600080fd5b600260009054906101000a900460ff16151561026357600080fd5b6000600260006101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600260009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031a57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041c57600080fd5b600260009054906101000a900460ff1615151561043857600080fd5b6001600260006101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561052a57600080fd5b600560018190555061053b8161053e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561057a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820a4a7ead19a847ce3e6c741bc327694fce990a2c46c764cdcf33342e1e1a976a70029",
  "sourceMap": "184:793:59:-;;;279:5;258:26;;;;;;;;;;;;;;;;;;;;607:10:58;599:5;;:18;;;;;;;;;;;;;;;;;;184:793:59;;;;;;",
  "deployedSourceMap": "184:793:59:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:95:59;;;;;;258:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;258:26:59;;;;;;;;;;;;;;;;;;;;;;;;;;;1128:114:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:114:58;;;;;;699:93:59;;8:9:-1;5:2;;;30:1;27;20:12;5:2;699:93:59;;;;;;255:20:58;;8:9:-1;5:2;;;30:1;27;20:12;5:2;255:20:58;;;;;;;;;;;;;;;;;;;;;;;;;;;784:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;784:74:58;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1430:121:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:95:59;758:5:58;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;594:6:59;;;;;;;;;;;586:15;;;;;;;;942:5;933:6;;:14;;;;;;;;;;;;;;;;;;959:9;;;;;;;;;;879:95::o;258:26::-;;;;;;;;;;;;;:::o;1128:114:58:-;758:5;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1205:5;;;;;;;;;;;1186:25;;;;;;;;;;;;1234:1;1218:5;;:18;;;;;;;;;;;;;;;;;;1128:114::o;699:93:59:-;758:5:58;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;434:6:59;;;;;;;;;;;433:7;425:16;;;;;;;;763:4;754:6;;:13;;;;;;;;;;;;;;;;;;779:7;;;;;;;;;;699:93::o;255:20:58:-;;;;;;;;;;;;;:::o;784:74::-;824:7;847:5;;;;;;;;;;;840:12;;784:74;:::o;1430:121::-;758:5;;;;;;;;;;;744:19;;:10;:19;;;736:28;;;;;;;;1508:1;1500:5;:9;;;;1516:29;1535:9;1516:18;:29::i;:::-;1430:121;:::o;1692:175::-;1784:1;1763:23;;:9;:23;;;;1755:32;;;;;;;;1827:9;1799:38;;1820:5;;;;;;;;;;;1799:38;;;;;;;;;;;;1852:9;1844:5;;:17;;;;;;;;;;;;;;;;;;1692:175;:::o",
  "source": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\n\r\nimport \"./Ownable.sol\";\r\n\r\n\r\n/**\r\n * @title Pausable\r\n * @dev Base contract which allows children to implement an emergency stop mechanism.\r\n */\r\ncontract Pausable is Ownable {\r\n  event Pause();\r\n  event Unpause();\r\n\r\n  bool public paused = false;\r\n\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is not paused.\r\n   */\r\n  modifier whenNotPaused() {\r\n    require(!paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Modifier to make a function callable only when the contract is paused.\r\n   */\r\n  modifier whenPaused() {\r\n    require(paused);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to pause, triggers stopped state\r\n   */\r\n  function pause() public onlyOwner whenNotPaused {\r\n    paused = true;\r\n    emit Pause();\r\n  }\r\n\r\n  /**\r\n   * @dev called by the owner to unpause, returns to normal state\r\n   */\r\n  function unpause() public onlyOwner whenPaused {\r\n    paused = false;\r\n    emit Unpause();\r\n  }\r\n}\r\n",
  "sourcePath": "D:\\tetris\\SUWiserLLC_serge\\contracts\\utility\\Pausable.sol",
  "ast": {
    "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        8728
      ]
    },
    "id": 8729,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8670,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:59"
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 8671,
        "nodeType": "ImportDirective",
        "scope": 8729,
        "sourceUnit": 8669,
        "src": "38:23:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8672,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8668,
              "src": "205:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$8668",
                "typeString": "contract Ownable"
              }
            },
            "id": 8673,
            "nodeType": "InheritanceSpecifier",
            "src": "205:7:59"
          }
        ],
        "contractDependencies": [
          8668
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
        "fullyImplemented": true,
        "id": 8728,
        "linearizedBaseContracts": [
          8728,
          8668
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 8675,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:59"
            },
            "src": "218:14:59"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 8677,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:59"
            },
            "src": "236:16:59"
          },
          {
            "constant": false,
            "id": 8680,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 8728,
            "src": "258:26:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8678,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "258:4:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 8679,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "279:5:59",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8688,
              "nodeType": "Block",
              "src": "418:37:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "433:7:59",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 8683,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8680,
                          "src": "434:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9390,
                        9391
                      ],
                      "referencedDeclaration": 9390,
                      "src": "425:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:16:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8686,
                  "nodeType": "ExpressionStatement",
                  "src": "425:16:59"
                },
                {
                  "id": 8687,
                  "nodeType": "PlaceholderStatement",
                  "src": "448:1:59"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.\r",
            "id": 8689,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:59"
            },
            "src": "393:62:59",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8696,
              "nodeType": "Block",
              "src": "579:36:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8692,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8680,
                        "src": "594:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9390,
                        9391
                      ],
                      "referencedDeclaration": 9390,
                      "src": "586:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:15:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8694,
                  "nodeType": "ExpressionStatement",
                  "src": "586:15:59"
                },
                {
                  "id": 8695,
                  "nodeType": "PlaceholderStatement",
                  "src": "608:1:59"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.\r",
            "id": 8697,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:2:59"
            },
            "src": "557:58:59",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8711,
              "nodeType": "Block",
              "src": "747:45:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8704,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8680,
                      "src": "754:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 8705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "763:4:59",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "754:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8707,
                  "nodeType": "ExpressionStatement",
                  "src": "754:13:59"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8708,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8675,
                      "src": "779:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8710,
                  "nodeType": "EmitStatement",
                  "src": "774:12:59"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state\r",
            "id": 8712,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8699,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8602,
                  "src": "723:9:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:9:59"
              },
              {
                "arguments": null,
                "id": 8702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8701,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8689,
                  "src": "733:13:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "733:13:59"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:59"
            },
            "payable": false,
            "returnParameters": {
              "id": 8703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:59"
            },
            "scope": 8728,
            "src": "699:93:59",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8726,
              "nodeType": "Block",
              "src": "926:48:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8719,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8680,
                      "src": "933:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "942:5:59",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "933:14:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8722,
                  "nodeType": "ExpressionStatement",
                  "src": "933:14:59"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8723,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8677,
                      "src": "959:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8725,
                  "nodeType": "EmitStatement",
                  "src": "954:14:59"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state\r",
            "id": 8727,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8715,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8714,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8602,
                  "src": "905:9:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "905:9:59"
              },
              {
                "arguments": null,
                "id": 8717,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8716,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8697,
                  "src": "915:10:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "915:10:59"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:59"
            },
            "payable": false,
            "returnParameters": {
              "id": 8718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:59"
            },
            "scope": 8728,
            "src": "879:95:59",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8729,
        "src": "184:793:59"
      }
    ],
    "src": "0:979:59"
  },
  "legacyAST": {
    "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        8728
      ]
    },
    "id": 8729,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8670,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:59"
      },
      {
        "absolutePath": "/D/tetris/SUWiserLLC_serge/contracts/utility/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 8671,
        "nodeType": "ImportDirective",
        "scope": 8729,
        "sourceUnit": 8669,
        "src": "38:23:59",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8672,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8668,
              "src": "205:7:59",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$8668",
                "typeString": "contract Ownable"
              }
            },
            "id": 8673,
            "nodeType": "InheritanceSpecifier",
            "src": "205:7:59"
          }
        ],
        "contractDependencies": [
          8668
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\r\n@dev Base contract which allows children to implement an emergency stop mechanism.\r",
        "fullyImplemented": true,
        "id": 8728,
        "linearizedBaseContracts": [
          8728,
          8668
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 8675,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:59"
            },
            "src": "218:14:59"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 8677,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:59"
            },
            "src": "236:16:59"
          },
          {
            "constant": false,
            "id": 8680,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 8728,
            "src": "258:26:59",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8678,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "258:4:59",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 8679,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "279:5:59",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8688,
              "nodeType": "Block",
              "src": "418:37:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "433:7:59",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 8683,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8680,
                          "src": "434:6:59",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8682,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9390,
                        9391
                      ],
                      "referencedDeclaration": 9390,
                      "src": "425:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "425:16:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8686,
                  "nodeType": "ExpressionStatement",
                  "src": "425:16:59"
                },
                {
                  "id": 8687,
                  "nodeType": "PlaceholderStatement",
                  "src": "448:1:59"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.\r",
            "id": 8689,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:59"
            },
            "src": "393:62:59",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8696,
              "nodeType": "Block",
              "src": "579:36:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8692,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8680,
                        "src": "594:6:59",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 8691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9390,
                        9391
                      ],
                      "referencedDeclaration": 9390,
                      "src": "586:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 8693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:15:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8694,
                  "nodeType": "ExpressionStatement",
                  "src": "586:15:59"
                },
                {
                  "id": 8695,
                  "nodeType": "PlaceholderStatement",
                  "src": "608:1:59"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.\r",
            "id": 8697,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "576:2:59"
            },
            "src": "557:58:59",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8711,
              "nodeType": "Block",
              "src": "747:45:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8704,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8680,
                      "src": "754:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 8705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "763:4:59",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "754:13:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8707,
                  "nodeType": "ExpressionStatement",
                  "src": "754:13:59"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8708,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8675,
                      "src": "779:5:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "779:7:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8710,
                  "nodeType": "EmitStatement",
                  "src": "774:12:59"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state\r",
            "id": 8712,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8700,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8699,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8602,
                  "src": "723:9:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:9:59"
              },
              {
                "arguments": null,
                "id": 8702,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8701,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8689,
                  "src": "733:13:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "733:13:59"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "713:2:59"
            },
            "payable": false,
            "returnParameters": {
              "id": 8703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:59"
            },
            "scope": 8728,
            "src": "699:93:59",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8726,
              "nodeType": "Block",
              "src": "926:48:59",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8719,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8680,
                      "src": "933:6:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "942:5:59",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "933:14:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8722,
                  "nodeType": "ExpressionStatement",
                  "src": "933:14:59"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 8723,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8677,
                      "src": "959:7:59",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:9:59",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8725,
                  "nodeType": "EmitStatement",
                  "src": "954:14:59"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state\r",
            "id": 8727,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 8715,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8714,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8602,
                  "src": "905:9:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "905:9:59"
              },
              {
                "arguments": null,
                "id": 8717,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8716,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8697,
                  "src": "915:10:59",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "915:10:59"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:59"
            },
            "payable": false,
            "returnParameters": {
              "id": 8718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:0:59"
            },
            "scope": 8728,
            "src": "879:95:59",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8729,
        "src": "184:793:59"
      }
    ],
    "src": "0:979:59"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2022-02-22T17:36:20.242Z"
}